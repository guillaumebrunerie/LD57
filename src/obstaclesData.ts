import { Polygon } from "pixi.js";
import {
	A_CupidIdle,
	A_Enemy3Idle,
	A_EnemyFlyingIdle,
	A_EnemyStillIdle,
	T_Bg_Walls_Level1,
	T_Rock_Level1_01,
	T_Rock_Level1_02,
	T_Rock_Level1_03,
	T_WallSpike_Level1_01,
	T_WallSpike_Level1_02,
	T_WallSpike_Level1_03,
	T_WallSpike_Level1_04,
} from "./assets";
import type { ObstacleData } from "./obstacle";

export const obstaclesData: ObstacleData[][] = [
	[
		{
			type: "wall",
			texture: T_Bg_Walls_Level1,
			polygon: new Polygon(
				2.53,
				7.1,
				130.42,
				3.55,
				130.42,
				174.06,
				107.33,
				293.06,
				142.85,
				442.26,
				98.45,
				699.8,
				135.74,
				1017.72,
				135.74,
				1168.7,
				109.1,
				1223.76,
				109.1,
				1392.49,
				125.09,
				1424.46,
				146.4,
				1570.1,
				102.0,
				1673.12,
				94.89,
				1753.04,
				114.43,
				1816.98,
				117.98,
				1918.22,
				2.53,
				1916.45,
			),
		},
		{
			type: "spike",
			texture: T_WallSpike_Level1_01,
			polygon: new Polygon(
				46.94,
				94.84,
				304.48,
				14.91,
				187.25,
				194.3,
				270.73,
				238.7,
				46.94,
				393.23,
			),
		},
		{
			type: "spike",
			texture: T_WallSpike_Level1_02,
			polygon: new Polygon(
				29.18,
				14.91,
				128.64,
				22.02,
				272.51,
				87.73,
				418.15,
				73.52,
				601.09,
				125.03,
				665.03,
				126.81,
				572.67,
				176.54,
				501.63,
				199.63,
				380.85,
				172.99,
				281.39,
				235.15,
				178.37,
				235.15,
				64.7,
				300.87,
				48.71,
				295.54,
			),
		},
		{
			type: "spike",
			texture: T_WallSpike_Level1_03,
			polygon: new Polygon(
				20.3,
				6.03,
				366.64,
				14.91,
				332.9,
				78.85,
				206.79,
				116.15,
				22.07,
				160.56,
			),
		},
		{
			type: "spike",
			texture: T_WallSpike_Level1_04,
			polygon: new Polygon(
				50.49,
				6.03,
				240.54,
				94.84,
				224.55,
				146.35,
				25.62,
				307.97,
			),
		},
		{
			type: "rock",
			texture: T_Rock_Level1_01,
			polygon: new Polygon(
				36.28,
				149.2,
				164.16,
				24.87,
				279.61,
				95.91,
				302.7,
				145.64,
				236.98,
				186.49,
				212.12,
				287.73,
				174.82,
				333.91,
				98.45,
				182.94,
			),
		},
		{
			type: "rock",
			texture: T_Rock_Level1_02,
			polygon: new Polygon(
				57.59,
				74.6,
				80.68,
				60.39,
				157.06,
				63.94,
				189.03,
				5.33,
				270.73,
				55.06,
				377.3,
				30.19,
				364.87,
				79.93,
				418.15,
				111.9,
				336.45,
				170.51,
				261.85,
				138.54,
				146.4,
				177.61,
				75.36,
				126.11,
				82.46,
				85.25,
			),
		},
		{
			type: "rock",
			texture: T_Rock_Level1_03,
			polygon: new Polygon(
				9.1,
				58.61,
				17.98,
				33.75,
				78.37,
				44.4,
				131.66,
				17.76,
				154.75,
				69.27,
				154.75,
				111.9,
				172.51,
				166.96,
				126.33,
				172.28,
				117.45,
				262.87,
				76.6,
				163.4,
				28.64,
				134.99,
			),
		},
		{
			type: "enemy-horizontal",
			texture: { textures: A_EnemyFlyingIdle, fps: 10 },
			polygon: new Polygon(
				211.68,
				307.63,
				249.44,
				205.67,
				324.97,
				211.33,
				336.29,
				271.75,
				264.55,
				313.29,
			),
		},
		{
			type: "enemy-vertical",
			texture: { textures: A_EnemyStillIdle, fps: 10 },
			polygon: new Polygon(
				247.55,
				203.78,
				215.45,
				226.44,
				211.68,
				260.42,
				230.56,
				284.97,
				264.55,
				286.86,
				285.31,
				267.98,
				287.2,
				232.1,
				270.21,
				213.22,
			),
		},
		{
			type: "enemy-still",
			texture: { textures: A_Enemy3Idle, fps: 10 },
			polygon: new Polygon(
				253.22,
				188.67,
				221.12,
				205.67,
				202.24,
				233.99,
				213.57,
				279.31,
				226.78,
				301.96,
				251.33,
				311.4,
				273.99,
				305.74,
				285.31,
				279.31,
				298.53,
				243.43,
				290.98,
				213.22,
			),
		},
		{
			type: "player",
			texture: { textures: A_CupidIdle, fps: 10 },
			polygon: new Polygon(
				192.8,
				209.44,
				236.22,
				152.8,
				290.98,
				203.78,
				243.78,
				245.32,
				238.11,
				286.86,
				200.35,
				279.31,
				221.12,
				243.43,
			),
		},
	],
];

obstaclesData[1] = obstaclesData[0];
obstaclesData[2] = obstaclesData[0];
obstaclesData[3] = obstaclesData[0];
obstaclesData[4] = obstaclesData[0];
obstaclesData[5] = obstaclesData[0];
obstaclesData[6] = obstaclesData[0];
obstaclesData[7] = obstaclesData[0];
obstaclesData[8] = obstaclesData[0];

export const playerData = obstaclesData[0][obstaclesData[0].length - 1];
export const playerPoints = Array.from(
	{ length: playerData.polygon.points.length / 2 },
	(_, i) => ({
		x: playerData.polygon.points[2 * i],
		y: playerData.polygon.points[2 * i + 1],
	}),
);
